{"version":3,"file":"static/js/616.0571f820.chunk.js","mappings":"4KA6GA,QAzGA,SAAgBA,GAAqB,IAApB,KAAEC,EAAI,QAAEC,GAASF,EAChC,MAAMG,GAAWC,EAAAA,EAAAA,OACVC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,CAC7CG,UAAc,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMS,WAAY,QAC5BC,YAAa,aACbC,OAAQ,kBACRC,WAAY,wBAORC,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BT,EAAe,IAAKD,EAAa,CAACQ,GAAOC,GAAQ,EAcnD,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UACPhB,GACCiB,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLP,KAAK,WACLC,MAAOT,EAAYE,SACnBc,SAAUV,KAGZQ,EAAAA,EAAAA,KAAA,QAAAD,SAAOb,EAAYE,eAGvBS,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,mBACPhB,GACCiB,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLP,KAAK,cACLC,MAAOT,EAAYG,YACnBa,SAAUV,KAGZQ,EAAAA,EAAAA,KAAA,QAAAD,SAAOb,EAAYG,kBAGvBQ,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YACPhB,GACCiB,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLP,KAAK,SACLC,MAAOT,EAAYI,OACnBY,SAAUV,KAGZQ,EAAAA,EAAAA,KAAA,QAAAD,SAAOb,EAAYI,aAGvBO,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBACPhB,GACCiB,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLP,KAAK,aACLC,MAAOT,EAAYK,WACnBW,SAAUV,KAGZQ,EAAAA,EAAAA,KAAA,QAAAD,SAAOb,EAAYK,oBAIzBM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC7BhB,GACCiB,EAAAA,EAAAA,KAAA,UAAQF,UAAU,iBAAiBK,QAtExBC,KACjBpB,GAAa,GAEbqB,MAAM,mBAAmB,EAmEoCN,SAAC,UAIxDC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,iBAAiBK,QAnFnBG,KACtBtB,GAAcD,EAAU,EAkF0CgB,SAAC,kBAI/DC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBK,QAxErBI,KACnB3B,EAAQ,MACRC,EAAS,SAAS,EAsE4CkB,SAAC,gBAMnE,C","sources":["components/Profile.jsx"],"sourcesContent":["// src/components/Profile.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Profile({ user, setUser }) {\n  const navigate = useNavigate();\n  const [isEditing, setIsEditing] = useState(false);\n  const [profileData, setProfileData] = useState({\n    username: user?.username || 'Guest',\n    dateOfBirth: '1990-01-01',\n    paypal: 'user@paypal.com',\n    creditCard: '**** **** **** 1234',\n  });\n\n  const handleEditClick = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfileData({ ...profileData, [name]: value });\n  };\n\n  const handleSave = () => {\n    setIsEditing(false);\n    // In a real app, you would also save the updated data to a backend here\n    alert('Profile updated!');\n  };\n\n  const handleLogout = () => {\n    setUser(null); // Clear user state\n    navigate('/login'); // Redirect to login page\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <h2>Profile</h2>\n      <div className=\"profile-details\">\n        <label>\n          <strong>Name:</strong>\n          {isEditing ? (\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={profileData.username}\n              onChange={handleInputChange}\n            />\n          ) : (\n            <span>{profileData.username}</span>\n          )}\n        </label>\n        <label>\n          <strong>Date of Birth:</strong>\n          {isEditing ? (\n            <input\n              type=\"date\"\n              name=\"dateOfBirth\"\n              value={profileData.dateOfBirth}\n              onChange={handleInputChange}\n            />\n          ) : (\n            <span>{profileData.dateOfBirth}</span>\n          )}\n        </label>\n        <label>\n          <strong>PayPal:</strong>\n          {isEditing ? (\n            <input\n              type=\"email\"\n              name=\"paypal\"\n              value={profileData.paypal}\n              onChange={handleInputChange}\n            />\n          ) : (\n            <span>{profileData.paypal}</span>\n          )}\n        </label>\n        <label>\n          <strong>Credit Card:</strong>\n          {isEditing ? (\n            <input\n              type=\"text\"\n              name=\"creditCard\"\n              value={profileData.creditCard}\n              onChange={handleInputChange}\n            />\n          ) : (\n            <span>{profileData.creditCard}</span>\n          )}\n        </label>\n      </div>\n      <div className=\"profile-actions\">\n        {isEditing ? (\n          <button className=\"button-colored\" onClick={handleSave}>\n            Save\n          </button>\n        ) : (\n          <button className=\"button-colored\" onClick={handleEditClick}>\n            Edit Profile\n          </button>\n        )}\n        <button className=\"button-outlined\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n"],"names":["_ref","user","setUser","navigate","useNavigate","isEditing","setIsEditing","useState","profileData","setProfileData","username","dateOfBirth","paypal","creditCard","handleInputChange","e","name","value","target","_jsxs","className","children","_jsx","type","onChange","onClick","handleSave","alert","handleEditClick","handleLogout"],"sourceRoot":""}